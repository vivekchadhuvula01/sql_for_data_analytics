CREATE DATABASE operation;
USE operation;


CREATE TABLE IF NOT EXISTS course(
course_id INT ,
course_name VARCHAR(30),
course_desc VARCHAR(30),
course_tag VARCHAR(30));

CREATE TABLE IF NOT EXISTS student(
student_id INT ,
student_name VARCHAR(30),
student_mobile INT,
student_course_enroll VARCHAR(30),
student_course_id INT);

INSERT INTO course VALUES
(101, 'FSDA', 'FULL-STACK-DATA-ANALYTICS', 'ANALYTICS'),
(102, 'BIG-DATA', 'FULL-STACK-BIG-DATA', 'ANALYTICS'),
(103, 'FSDS', 'FULL-STACK-DATA-STATISTICS', 'STATISTICS'),
(104, 'FSWD', 'FULL-STACK-WEB-DEVELOPMENT', 'WEB-DEVELOPMENT'),
(105, 'FSD', 'FULL-STACK-DATA-', 'ANALYTICS'),
(106, 'BLOCKCHAIN', 'FULL-STACK-BLOCKCHAIN', 'BLOCKCHAIN'),
(107, ' STATISTICS', 'STATISTICS', 'STATISTICS');

INSERT INTO student VALUES
(101, 'RAM', 74589,'YES',101),
(103, 'PRIYA', 6887,'YES',103),
(104, 'HANU', 89554,'NO',104),
(1015, 'RITA', 567568,'YES',105),
(1016, 'KIM', 76989,'YES',106),
(1017, 'NIM', 809876,'NO',107),
(1018, 'DIM', 567568,'YES',108),
(1019, 'RIM', 678945,'YES',109),
(1010, 'KAM', 68658,'YES',108),
(1011, 'KANE', 68769,'NO',105);

SELECT * FROM COURSE;
SELECT * FROM STUDENT;


SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C CROSS JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C INNER JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C OUTER JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C FULL JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C RIGHT JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

SELECT C.COURSE_ID,C.COURSE_NAME,C.COURSE_DESC, S.STUDENT_ID,S.STUDENT_NAME,S.STUDENT_COURSE_ID 
FROM COURSE C LEFT JOIN STUDENT S ON C.COURSE_ID= S.STUDENT_COURSE_ID;

